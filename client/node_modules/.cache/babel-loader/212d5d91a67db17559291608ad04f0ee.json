{"ast":null,"code":"import _regeneratorRuntime from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skarthikeya/Code/Learning/react-pipes/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Login from './Login.js';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport Project from './Project.js';\nimport Logout from './Login.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.callLogin =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/app/login');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.successfulLogin = function (username, password) {\n      console.log(JSON.stringify(_this.state));\n\n      _this.setState({\n        username: username,\n        password: password,\n        isLoggedIn: true\n      });\n\n      var response = fetch('http://localhost:5000/app/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: _this.state.username,\n          password: _this.state.password\n        })\n      });\n      var body = response.text;\n      console.log(\"Response \" + body);\n\n      _this.setState({\n        isLoggedIn: true\n      });\n\n      console.log(JSON.stringify(_this.state));\n      return true;\n    };\n\n    _this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      isLoggedIn: false,\n      username: \"\",\n      password: \"\"\n    };\n    _this.setState = _this.setState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callLogin().then(function (res) {\n        return _this2.setState({\n          response: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(JSON.stringify(this.state.isLoggedIn));\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        render: function render(props) {\n          return _this3.state.isLoggedIn ? React.createElement(Project, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }) : React.createElement(Login, {\n            onClick: _this3.successfulLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/createProject\",\n        component: Project,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/skarthikeya/Code/Learning/react-pipes/client/src/App.js"],"names":["React","Component","Login","BrowserRouter","Router","Route","Link","Redirect","withRouter","Project","Logout","App","callLogin","fetch","response","json","body","status","Error","message","successfulLogin","username","password","console","log","JSON","stringify","state","setState","isLoggedIn","method","headers","text","post","responseToPost","bind","then","res","express","catch","err","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login.js';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport Project from './Project.js';\nimport Logout from './Login.js';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      isLoggedIn: false,\n      username: \"\",\n      password: \"\",\n    };\n    this.setState = this.setState.bind(this);\n\n  }\n\n\n  componentDidMount() {\n    this.callLogin()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callLogin = async () => {\n    const response = await fetch('/app/login');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  successfulLogin =  (username, password) => {\n    console.log(JSON.stringify(this.state));\n    this.setState({\n      username : username,\n      password: password,\n      isLoggedIn: true,\n    });\n    const response = fetch('http://localhost:5000/app/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({username: this.state.username, password: this.state.password})\n    });\n    const body = response.text;\n    console.log(\"Response \" + body );\n    this.setState({\n      isLoggedIn: true,\n    });\n    console.log(JSON.stringify(this.state));\n    return true;\n  };\n\n\n  render() {\n    console.log(JSON.stringify(this.state.isLoggedIn));\n    return (\n      <Router>\n      <div className=\"App\">\n\n\n      <Route path='/' render={(props) => (this.state.isLoggedIn) ? <Project/> : <Login onClick={this.successfulLogin} />} />\n      <Route path=\"/createProject\" component={Project} />\n      <Route path=\"/logout\" component={Logout} />\n\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}