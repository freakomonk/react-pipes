{"ast":null,"code":"import _regeneratorRuntime from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skarthikeya/Code/Learning/react-pipes/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/skarthikeya/Code/Learning/react-pipes/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Login from './Login.js';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport Project from './Project.js';\nimport Logout from './Login.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      isLoggedIn: false\n    };\n    _this.callLogin =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/app/login');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.next = 3;\n                return fetch('/api/world', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body,\n                  isLoggedIn: true\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.successfulLogin = function (username, password) {\n      _this.setState({\n        isLoggedIn: true\n      });\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callLogin().then(function (res) {\n        return _this2.setState({\n          response: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(JSON.stringify(this.state.isLoggedIn));\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        component: this.state.isLoggedIn ? Project : Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/createProject\",\n        component: Project,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nexport { successfulLogin };","map":{"version":3,"sources":["/Users/skarthikeya/Code/Learning/react-pipes/client/src/App.js"],"names":["React","Component","Login","BrowserRouter","Router","Route","Link","Redirect","withRouter","Project","Logout","App","state","response","post","responseToPost","isLoggedIn","callLogin","fetch","json","body","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","successfulLogin","username","password","then","res","express","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Login.js';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport Project from './Project.js';\nimport Logout from './Login.js';\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n    isLoggedIn: false,\n  };\n\n  componentDidMount() {\n    this.callLogin()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callLogin = async () => {\n    const response = await fetch('/app/login');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body,\n    isLoggedIn: true });\n  };\n\n  successfulLogin = (username, password) => {\n    this.setState({\n      isLoggedIn: true,\n    });\n    return true;\n  };\n\n\n  render() {\n    console.log(JSON.stringify(this.state.isLoggedIn));\n    return (\n      <Router>\n      <div className=\"App\">\n\n\n      <Route path='/' component= {(this.state.isLoggedIn) ? Project :Login} />\n      <Route path=\"/createProject\" component={Project} />\n      <Route path=\"/logout\" component={Logout} />\n\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\nexport { successfulLogin };\n"]},"metadata":{},"sourceType":"module"}